services:
  api-gateway:
    build: ./api-gateway
    restart: unless-stopped
    ports:
      - "8085:8080" # TODO: pogledaj zasto ne moze se mapirati na 8080 od hosta
    # healthcheck:
    #   interval: 10s
    #   retries: 10
    #   timeout: 30s
    #   test: "curl --fail --silent localhost:8080/actuator/health | grep UP || exit 1"

  learning-recommender-service:
    build: ./learning-recommender-service
    restart: unless-stopped
    user: ${UID}:${GID}
    depends_on:
      user-service-db:
        condition: service_healthy
    environment:
      AZURE_OPENAI_ENDPOINT: ${AZURE_OPENAI_ENDPOINT}
      AZURE_OPENAI_API_KEY: ${AZURE_OPENAI_API_KEY}
      DEPLOYMENT_NAME: ${DEPLOYMENT_NAME}
#    ports:
#      - "8082:8082"

  user-service:
    build: ./user-service
    restart: unless-stopped
    user: ${UID}:${GID}
    depends_on:
      user-service-db:
        condition: service_healthy
    environment:
      MARIADB_USER_REPOSITORY_ROOT_PASSWORD: ${MARIADB_USER_REPOSITORY_ROOT_PASSWORD}
#    ports:
#      - "8081:8081"

  course-service:
    build: ./course-service
    restart: unless-stopped
    user: ${UID}:${GID}
    depends_on:
      course-service-db:
        condition: service_healthy
    environment:
      MARIADB_USER_REPOSITORY_ROOT_PASSWORD: ${MARIADB_USER_REPOSITORY_ROOT_PASSWORD}
#    ports:
#      - "8087:8083"

  course-service-db:
    image: mariadb:lts-jammy
    restart: unless-stopped
    user: ${UID}:${GID}
    environment:
      MARIADB_DATABASE: course_service_repository
      MARIADB_ROOT_PASSWORD: ${MARIADB_USER_REPOSITORY_ROOT_PASSWORD}
    volumes:
      - ./course-service-db/data:/var/lib/mysql:Z
    healthcheck:
      interval: 10s
      retries: 10
      timeout: 30s
      test: [ "CMD", "healthcheck.sh", "--connect", "--innodb_initialized" ]

  user-service-db:
    image: mariadb:lts-jammy
    restart: unless-stopped
    user: ${UID}:${GID}
    environment:
      MARIADB_DATABASE: user_service_repository
      MARIADB_ROOT_PASSWORD: ${MARIADB_USER_REPOSITORY_ROOT_PASSWORD}
    volumes:
      - ./user-service-db/data:/var/lib/mysql:Z
    healthcheck:
      interval: 10s
      retries: 10
      timeout: 30s
      test: [ "CMD", "healthcheck.sh", "--connect", "--innodb_initialized" ]

  prometheus:
    image: prom/prometheus:v2.52.0
    restart: unless-stopped
    ports:
      - "9091:9090"
    volumes:
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - ./prometheus/data:/prometheus
    command:
      - "--config.file=/etc/prometheus/prometheus.yml"
      - "--storage.tsdb.path=/prometheus"
      - "--web.console.libraries=/etc/prometheus/console_libraries"
      - "--web.console.templates=/etc/prometheus/consoles"
      - "--web.enable-lifecycle"

  grafana:
    image: grafana/grafana:latest
    restart: unless-stopped
    ports:
      - "3000:3000"
    environment: # TODO: use .env file
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin
    volumes:
      - ./grafana/data:/var/lib/grafana
    depends_on:
      - prometheus